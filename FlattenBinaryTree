/*
TC: O(n) as we are going to ever node and trying to connect to the right side.
SC: O(n) due to implicit stack
 */
class FlattenBinaryTree{
    public void flatten(TreeNode root) {

        helper(root);
    }

    private TreeNode helper(TreeNode root){

        if (root == null) return null;

        if (root.left == null && root.right == null) return root;

        TreeNode left = helper(root.left);
        TreeNode right = helper(root.right);

        if (left!= null){
            left.right = root.right;
            root.right = root.left;
            root.left = null;
        }

        return right == null ? left : right;
    }
}